@{
    var lista = (IList<Inquilino>)ViewBag.lista;
    var Multas = (IList<Multa>)ViewBag.multas;
    ViewData["Title"] = "Lista de Inquilinos";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card-header bg-primary text-white">
                <h1 class="display-4 text-center">INQUILINOS</h1>
                <div class="input-group">
                    <input type="text" id="search-input" class="form-control"
                        placeholder="Buscar por nombre o apellido">
                    <button class="btn btn-outline-light" type="button"><ion-icon
                            name="search-outline"></ion-icon></button>
                </div>
            </div>
            <div class="card bg-light">
                <div class="card-body">
                    @if (lista.Count != 0)
                    {
                        <div class="row row-cols-1 row-cols-md-3 g-4">
                            @foreach (var item in lista)
                            {
                                <div class="col">
                                    <div class="card border-secondary">
                                          <div class="card-header ">
  <span class="payment-count @if (Multas.Where(m => m.IdInquilino == item.Id).Count() >= 1) { @Html.Raw("bg-danger") } else { @Html.Raw("bg-primary") }">
    @Multas.Where(m => m.IdInquilino == item.Id).Count()
  </span>
</div>

                                        <div class="card-body">
                                            <h5 class="card-title">@item.Nombre @item.Apellido</h5>
                                            <h6 class="card-subtitle mb-2 text-muted">@item.Email</h6>
                                            <hr>
                                            <p class="card-text"><strong>DNI:</strong> @item.Dni</p>
                                            <p class="card-text"><strong>Tel√©fono:</strong> @item.Telefono</p>
                                            <div class="btn-group d-flex justify-content-center" role="group"
                                                aria-label="Acciones">
                                                <a href="@Url.Action("Update", new { id = item.Id })"
                                                    class="btn btn-outline-secondary"><ion-icon
                                                        name="create-outline"></ion-icon>Editar</a>
                                                <a class="buton" id="btn-delete-@item.Id"
                                                    href="@Url.Action("Delete", new { id = item.Id })">
                                                    <span class="button__text">Delete</span>
                                                    <span class="button__icon"><svg class="svg" height="512"
                                                            viewBox="0 0 512 512" width="512"
                                                            xmlns="http://www.w3.org/2000/svg">
                                                            <title></title>
                                                            <path
                                                                d="M112,112l20,320c.95,18.49,14.4,32,32,32H348c17.67,0,30.87-13.51,32-32l20-320"
                                                                style="fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px">
                                                            </path>
                                                            <line
                                                                style="stroke:#fff;stroke-linecap:round;stroke-miterlimit:10;stroke-width:32px"
                                                                x1="80" x2="432" y1="112" y2="112"></line>
                                                            <path
                                                                d="M192,112V72h0a23.93,23.93,0,0,1,24-24h80a23.93,23.93,0,0,1,24,24h0v40"
                                                                style="fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px">
                                                            </path>
                                                            <line
                                                                style="fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                                                                x1="256" x2="256" y1="176" y2="400"></line>
                                                            <line
                                                                style="fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                                                                x1="184" x2="192" y1="176" y2="400"></line>
                                                            <line
                                                                style="fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px"
                                                                x1="328" x2="320" y1="176" y2="400"></line>
                                                        </svg></span>
                                                </a>
                                            </div>
                                        </div>
                                            <div class="card-footer">
                                                <details>
                                                    <summary>Multas:</summary>
                                                    @foreach (var multa in Multas.Where(m => m.IdInquilino == item.Id))
                                                     {
                                                       <div>
                                                         <p>$@multa.Monto</p>
                                                       </div>
                                                     }
                                                </details>
                                            </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning text-center" role="alert">
                            No hay inquilinos en el sitio
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="add">
    <a class="btn btn-success" href="@Url.Action("Create")" role="button"><ion-icon name="add-outline"></ion-icon>
    </a>
</div>



<style>
    body {
        background-color: #ffffff;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='800' height='800' viewBox='0 0 200 200'%3E%3Cdefs%3E%3ClinearGradient id='a' gradientUnits='userSpaceOnUse' x1='88' y1='88' x2='0' y2='0'%3E%3Cstop offset='0' stop-color='%23005092'/%3E%3Cstop offset='1' stop-color='%23007cc4'/%3E%3C/linearGradient%3E%3ClinearGradient id='b' gradientUnits='userSpaceOnUse' x1='75' y1='76' x2='168' y2='160'%3E%3Cstop offset='0' stop-color='%23868686'/%3E%3Cstop offset='0.09' stop-color='%23ababab'/%3E%3Cstop offset='0.18' stop-color='%23c4c4c4'/%3E%3Cstop offset='0.31' stop-color='%23d7d7d7'/%3E%3Cstop offset='0.44' stop-color='%23e5e5e5'/%3E%3Cstop offset='0.59' stop-color='%23f1f1f1'/%3E%3Cstop offset='0.75' stop-color='%23f9f9f9'/%3E%3Cstop offset='1' stop-color='%23FFFFFF'/%3E%3C/linearGradient%3E%3Cfilter id='c' x='0' y='0' width='200%25' height='200%25'%3E%3CfeGaussianBlur in='SourceGraphic' stdDeviation='12' /%3E%3C/filter%3E%3C/defs%3E%3Cpolygon fill='url(%23a)' points='0 174 0 0 174 0'/%3E%3Cpath fill='%23000' fill-opacity='.5' filter='url(%23c)' d='M121.8 174C59.2 153.1 0 174 0 174s63.5-73.8 87-94c24.4-20.9 87-80 87-80S107.9 104.4 121.8 174z'/%3E%3Cpath fill='url(%23b)' d='M142.7 142.7C59.2 142.7 0 174 0 174s42-66.3 74.9-99.3S174 0 174 0S142.7 62.6 142.7 142.7z'/%3E%3C/svg%3E");
        background-attachment: fixed;
        background-repeat: no-repeat;
        background-position: top left;
    }

    summary {
        font-size: 1.2rem;
        font-weight: bold;
        padding: 1rem;
        background-color: #f5f5f5;
        cursor: pointer;
        outline: none;
        transition: background-color 0.2s ease;
    }

    summary:hover {
        background-color: #ddd;
    }

    summary::-webkit-details-marker {
        display: none;
    }

    /* Estilo del contenido */
    details>div {
        border: 1px solid #ddd;
        border-top: none;
        padding: 1rem;
        background-color: #f9f9f9;
        transition: background-color 0.2s ease;
    }

    details[open]>div {
        border-top: 1px solid #ddd;
    }

    details:hover>div {
        background-color: #f5f5f5;
    }

    #card-form {
        background-color: #ada8a85c;
        height: 500px;
        overflow-y: scroll;
    }


    .accordion-toggle {
        transition: all .5s ease;
    }

    .accordion-toggle:hover {
        background-color: #abe7a3;
        cursor: pointer;
    }

    .table-responsive {
        background-color: #c2c4cf;
        border-radius: 5px;
        border: .5px solid rgb(105, 101, 101);
    }

    #add {
        position: fixed;
        bottom: 0;
        right: 0;
        margin: 20px;
    }

    .buton {
        position: relative;
        width: 150px;
        height: 40px;
        cursor: pointer;
        display: flex;
        align-items: center;
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
        border: 1px solid #cc0000;
        background-color: #e50000;
        overflow: hidden;
    }

    .buton,
    .button__icon,
    .button__text {
        transition: all 0.3s;
    }

    .buton .button__text {
        transform: translateX(35px);
        color: #fff;
        font-weight: 600;
    }

    .buton .button__icon {
        position: absolute;
        transform: translateX(109px);
        height: 100%;
        width: 39px;
        background-color: #cc0000;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .buton .svg {
        width: 20px;
    }

    .buton:hover {
        background: #cc0000;
    }

    .buton:hover .button__text {
        color: transparent;
    }

    .buton:hover .button__icon {
        width: 148px;
        transform: translateX(0);
    }

    .buton:active .button__icon {
        background-color: #b20000;
    }

    .buton:active {
        border: 1px solid #b20000;
    }

      .payment-count {
  display: block;
  position: absolute;
  top: -10px;
  right: -10px;
  color: white;
  font-weight: bold;
  font-size: 20px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  text-align: center;
  line-height: 40px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
}



</style>
